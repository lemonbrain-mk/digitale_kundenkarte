version: '3.4'

services:
  reverse-proxy:
    depends_on: 
      - client
      - server
    image: traefik:latest

    command:
      - --api.insecure=true
      - --entrypoints.server_secure.address=:5001
      - --entrypoints.server_secure.http3.advertisedPort=5001
      - --entrypoints.client_secure.address=:443
      - --entrypoints.client_secure.http3.advertisedPort=443
      - --experimental.http3=true
      - --providers.docker=true
      # Logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
      - --log.level=debug
    ports:
      - "5001:5001/tcp"
      - "5001:5001/udp"
      - "443:443/tcp"
      - "443:443/udp"
      - 5101:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
      - ./traefik:/etc/traefik

  client:
    depends_on: 
      - server
    build: client
    env_file: .env
    environment:
      - NODE_ENV=production
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.client_route.entrypoints=client_secure
      - traefik.http.routers.client_route.tls=true
      - traefik.http.routers.client_route.rule=Host(`client.localhost`)
      - traefik.http.routers.client_route.service=client_service
      - traefik.http.services.client_service.loadbalancer.server.port=3001
      - traefik.http.services.client_service.loadbalancer.healthcheck.path=/
      - traefik.http.services.client_service.loadbalancer.healthcheck.interval=2000ms
      - traefik.http.services.client_service.loadbalancer.healthcheck.timeout=500ms
      - traefik.http.services.client_service.loadbalancer.healthcheck.scheme=http

  server:
    depends_on: 
      - mongodb
    build: server
    env_file: .env
    environment:
      - NODE_ENV=production
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=$MONGO_HOSTNAME
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    restart: always
    volumes:
      - ./server:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    labels:
      - traefik.enable=true
      - traefik.http.routers.server_route.entrypoints=server_secure
      - traefik.http.routers.server_route.tls=true
      - traefik.http.routers.server_route.rule=Host(`server.localhost`)
      - traefik.http.routers.server_route.service=server_service
      - traefik.http.services.server_service.loadbalancer.server.port=3003
      #todo: This lines will work as soon as graphql is in place https://www.apollographql.com/docs/apollo-server/monitoring/health-checks/
      # - traefik.http.services.server_service.loadbalancer.healthcheck.path=/graphql?query=%7B__typename%7D
      # - traefik.http.services.server_service.loadbalancer.healthcheck.interval=1000ms
      # - traefik.http.services.server_service.loadbalancer.healthcheck.timeout=750ms
      # - traefik.http.services.server_service.loadbalancer.healthcheck.scheme=http

  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    ports:
      - $MONGO_PORT:$MONGO_PORT
    volumes:  
      - dbdata:/data/db 

volumes:
  dbdata:
  node_modules: 
